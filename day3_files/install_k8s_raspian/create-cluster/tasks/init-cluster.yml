- name: Baixa as imagens do K8s
  command: 
    kubeadm config images pull  

- name: Verifica situação do cluster
  shell:
    kubectl cluster-info
  register: cluster_info

- name: Iniciando cluster k8s
  command:
    kubeadm init 
  register: kubeadm_init
  when: cluster_info.stdout.find('control plane is running at') != -1

- name: Criando o diretorio .kube
  file:
    path: ~/.kube
    state: directory

- name: Linkando o arquivo de configuração de acesso
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link

- name: Instalando o Weave Network
  shell: kubectl apply -f {{ default_url_weavenet  }}
  register: weavenet_result

- name: Pegando o token de join worker
  shell: kubeadm token list | cut -d ' ' -f1 | sed -n '2p'
  register: k8s_token

- name: CA Hash
  shell: openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
  register: k8s_master_ca_hash

- name: Adicionando o token e hash no dummy host
  add_host:
    name: "K8S_TOKEN_HOLDER"
    token: "{{ k8s_token.stdout }}"
    hash: "{{ k8s_master_ca_hash.stdout }}"
    
- name: 
  debug: 
    msg: "[MASTER] K8S_TOKEN_HOLDER - O token é {{ hostvars['K8S_TOKEN_HOLDER']['token'] }}"

- name: 
  debug: 
    msg: "[MASTER] K8S_TOKEN_HOLDER - O hash é {{ hostvars['K8S_TOKEN_HOLDER']['hash'] }}"